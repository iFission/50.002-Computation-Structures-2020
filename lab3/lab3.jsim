.include "../nominal.jsim"
.include "../stdcell.jsim"
//.include "../lab3adder.jsim"
//.include "../lab3compare.jsim"
//.include "../lab3boolean.jsim"
//.include "../lab3shifter.jsim"
.include "../lab3checkoff_6.jsim"

.subckt FASUM A B CIN S
XXOR1 A B 1 xor2
XXOR2 1 CIN S xor2
.ends

.subckt FACARRYOUT A B CIN CARRY
XAND1 A B 1 and2
XAND2 B CIN 2 and2
XAND3 A CIN 4 and2
XOR1 1 2 3 or2
XOR2 3 4 CARRY or2
.ends

.subckt FA A B CIN S CARRY
XFASUM A B CIN S FASUM
XFACARRYOUT A B CIN CARRY FACARRYOUT
.ends

.subckt adder32 ALUFN[0] A[31:0] B[31:0] s[31:0] z v n
// adder
XinvB B[31:0] ALUFN[0]#32 Bi[31:0] xor2
Xadder1  A[0] Bi[0] ALUFN0 s[0] c[0] FA
Xadder31 A[31:1] Bi[31:1] c[30:0] s[31:1] c[31:1] FA

// z
Xnorz s[7:0] s[15:8] s[23:16] s[31:24] output[7:0] nor4
Xandz1 output[7:6] output[5:4] output[3:2] output[1:0] outputk[1:0] and4
Xandz2 outputk[1] outputk[0] z and2

// check v
Xinv1 A[31] Ainv inverter
Xinv2 Bi[31] Binv inverter
Xinv3 s[31] sinv inverter
Xandv1 A[31] Bi[31] sinv outputi and3
Xandv2 Ainv Binv s[31] outputj and3
Xorv outputi outputj v or2

// check n
.connect s[31] n
.ends

// compare
.subckt compare32 ALUFN[2:1] z v n cmp[31:0] 
.connect 0 cmp[31:1]
Xxor n v outputi xor2
Xor z outputi outputj or2
Xmux4 ALUFN[1] ALUFN[2] 0 z outputi outputj cmp[0] mux4
.ends 


// boolean
.subckt boole32 ALUFN[3:0] A[31:0] B[31:0] boole[31:0] 
Xmux4 A[31:0] B[31:0] ALUFN[0]#32 ALUFN[1]#32 ALUFN[2]#32 ALUFN[3]#32 boole[31:0] mux4
.ends 

// bitshift
.subckt shift32 ALUFN[1:0] A[31:0] B[4:0] shift[31:0] 
Xslb4 B[4]#32 A[31:0] A[15:0] 0#16 Wl[31:0] mux2
Xslb3 B[3]#32 Wl[31:0] Wl[23:0] 0#8 Xl[31:0] mux2
Xslb2 B[2]#32 Xl[31:0] Xl[27:0] 0#4 Yl[31:0] mux2
Xslb1 B[1]#32 Yl[31:0] Yl[29:0] 0#2 Zl[31:0] mux2
Xslb0 B[0]#32 Zl[31:0] Zl[30:0] 0 SL[31:0] mux2

Xsrb4 B[4]#32 A[31:0] 0#16 A[31:16] Wr[31:0] mux2
Xsrb3 B[3]#32 Wr[31:0] 0#8 Wr[31:8] Xr[31:0] mux2
Xsrb2 B[2]#32 Xr[31:0] 0#4 Xr[31:4] Yr[31:0] mux2
Xsrb1 B[1]#32 Yr[31:0] 0#2 Yr[31:2] Zr[31:0] mux2
Xsrb0 B[0]#32 Zr[31:0] 0 Zr[31:1] SR[31:0] mux2

Xsrab4 B[4]#32 A[31:0] A[31]#16 A[31:16] W[31:0] mux2
Xsrab3 B[3]#32 W[31:0] A[31]#8 W[31:8] X[31:0] mux2
Xsrab2 B[2]#32 X[31:0] A[31]#4 X[31:4] Y[31:0] mux2
Xsrab1 B[1]#32 Y[31:0] A[31]#2 Y[31:2] Z[31:0] mux2
Xsrab0 B[0]#32 Z[31:0] A[31] Z[31:1] SRA[31:0] mux2

Xmux4 ALUFN[0]#32 ALUFN[1]#32 SL[31:0] SR[31:0] 0#32 SRA[31:0] shift[31:0] mux4
.ends 

.subckt alu ALUFN[5:0] A[31:0] B[31:0] alu[31:0] z v n
Xadder32 ALUFN[0] A[31:0] B[31:0] s[31:0] z v n adder32
Xcompare32 ALUFN[2:1] z v n cmp[31:0] compare32
Xboole32 ALUFN[3:0] A[31:0] B[31:0] boole[31:0] boole32
Xshift32 ALUFN[1:0] A[31:0] B[4:0] shift[31:0] shift32
Xmux4 ALUFN[4]#32 ALUFN[5]#32 s[31:0] boole[31:0] shift[31:0] cmp[31:0] ALU[31:0] mux4
.ends